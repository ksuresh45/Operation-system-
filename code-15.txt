#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_USERS 10
#define MAX_FILES 20
#define NAME_LENGTH 50

// Structure to represent a user/directory
typedef struct {
    char username[NAME_LENGTH];
    char files[MAX_FILES][NAME_LENGTH];
    int fileCount;
} UserDirectory;

UserDirectory users[MAX_USERS];
int userCount = 0;

// Function to create a user/directory
void createUser() {
    if (userCount >= MAX_USERS) {
        printf("Maximum users reached!\n");
        return;
    }

    char name[NAME_LENGTH];
    printf("Enter user/directory name: ");
    scanf("%s", name);

    // Check if user already exists
    for (int i = 0; i < userCount; i++) {
        if (strcmp(users[i].username, name) == 0) {
            printf("User already exists!\n");
            return;
        }
    }

    strcpy(users[userCount].username, name);
    users[userCount].fileCount = 0;
    userCount++;
    printf("User '%s' created successfully.\n", name);
}

// Function to create a file under a user
void createFile() {
    if (userCount == 0) {
        printf("No users exist! Create a user first.\n");
        return;
    }

    char username[NAME_LENGTH];
    printf("Enter user/directory name to add file: ");
    scanf("%s", username);

    // Find user
    int idx = -1;
    for (int i = 0; i < userCount; i++) {
        if (strcmp(users[i].username, username) == 0) {
            idx = i;
            break;
        }
    }

    if (idx == -1) {
        printf("User not found!\n");
        return;
    }

    if (users[idx].fileCount >= MAX_FILES) {
        printf("Maximum files reached for this user!\n");
        return;
    }

    char filename[NAME_LENGTH];
    printf("Enter file name to create: ");
    scanf("%s", filename);

    // Check if file already exists
    for (int i = 0; i < users[idx].fileCount; i++) {
        if (strcmp(users[idx].files[i], filename) == 0) {
            printf("File already exists!\n");
            return;
        }
    }

    strcpy(users[idx].files[users[idx].fileCount], filename);
    users[idx].fileCount++;
    printf("File '%s' created under user '%s'.\n", filename, username);
}

// Function to delete a file
void deleteFile() {
    if (userCount == 0) {
        printf("No users exist!\n");
        return;
    }

    char username[NAME_LENGTH];
    printf("Enter user/directory name: ");
    scanf("%s", username);

    int idx = -1;
    for (int i = 0; i < userCount; i++) {
        if (strcmp(users[i].username, username) == 0) {
            idx = i;
            break;
        }
    }

    if (idx == -1) {
        printf("User not found!\n");
        return;
    }

    char filename[NAME_LENGTH];
    printf("Enter file name to delete: ");
    scanf("%s", filename);

    int found = 0;
    for (int i = 0; i < users[idx].fileCount; i++) {
        if (strcmp(users[idx].files[i], filename) == 0) {
            found = 1;
            for (int j = i; j < users[idx].fileCount - 1; j++)
                strcpy(users[idx].files[j], users[idx].files[j + 1]);
            users[idx].fileCount--;
            printf("File '%s' deleted from user '%s'.\n", filename, username);
            break;
        }
    }

    if (!found)
        printf("File not found!\n");
}

// Function to display files of a user
void displayFiles() {
    if (userCount == 0) {
        printf("No users exist!\n");
        return;
    }

    char username[NAME_LENGTH];
    printf("Enter user/directory name: ");
    scanf("%s", username);

    int idx = -1;
    for (int i = 0; i < userCount; i++) {
        if (strcmp(users[i].username, username) == 0) {
            idx = i;
            break;
        }
    }

    if (idx == -1) {
        printf("User not found!\n");
        return;
    }

    if (users[idx].fileCount == 0) {
        printf("No files exist for user '%s'.\n", username);
        return;
    }

    printf("Files under user '%s':\n", username);
    for (int i = 0; i < users[idx].fileCount; i++)
        printf("%d. %s\n", i + 1, users[idx].files[i]);
}

// Function to search for a file under a user
void searchFile() {
    if (userCount == 0) {
        printf("No users exist!\n");
        return;
    }

    char username[NAME_LENGTH];
    printf("Enter user/directory name: ");
    scanf("%s", username);

    int idx = -1;
    for (int i = 0; i < userCount; i++) {
        if (strcmp(users[i].username, username) == 0) {
            idx = i;
            break;
        }
    }

    if (idx == -1) {
        printf("User not found!\n");
        return;
    }

    char filename[NAME_LENGTH];
    printf("Enter file name to search: ");
    scanf("%s", filename);

    for (int i = 0; i < users[idx].fileCount; i++) {
        if (strcmp(users[idx].files[i], filename) == 0) {
            printf("File '%s' found under user '%s'.\n", filename, username);
            return;
        }
    }

    printf("File '%s' not found under user '%s'.\n", filename, username);
}

int main() {
    int choice;

    while (1) {
        printf("\nTwo-Level Directory Operations:\n");
        printf("1. Create User/Directory\n");
        printf("2. Create File\n");
        printf("3. Delete File\n");
        printf("4. Display Files of a User\n");
        printf("5. Search File\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: createUser(); break;
            case 2: createFile(); break;
            case 3: deleteFile(); break;
            case 4: displayFiles(); break;
            case 5: searchFile(); break;
            case 6: exit(0);
            default: printf("Invalid choice! Try again.\n");
        }
    }

    return 0;
}
