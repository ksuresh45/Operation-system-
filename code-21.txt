#include <stdio.h>

int main() {
    int n, m;

    printf("Enter number of memory blocks: ");
    scanf("%d", &n);
    int blockSize[n];
    printf("Enter size of each block:\n");
    for (int i = 0; i < n; i++)
        scanf("%d", &blockSize[i]);

    printf("Enter number of processes: ");
    scanf("%d", &m);
    int processSize[m];
    printf("Enter size of each process:\n");
    for (int i = 0; i < m; i++)
        scanf("%d", &processSize[i]);

    int allocation[m];
    for (int i = 0; i < m; i++)
        allocation[i] = -1; // -1 indicates not allocated

    // Worst Fit Allocation
    for (int i = 0; i < m; i++) {
        int worstIdx = -1;
        for (int j = 0; j < n; j++) {
            if (blockSize[j] >= processSize[i]) {
                if (worstIdx == -1 || blockSize[j] > blockSize[worstIdx])
                    worstIdx = j;
            }
        }
        if (worstIdx != -1) {
            allocation[i] = worstIdx;
            blockSize[worstIdx] -= processSize[i]; // Reduce available block size
        }
    }

    // Display Allocation Result
    printf("\nProcess No.\tProcess Size\tBlock Allocated\n");
    for (int i = 0; i < m; i++) {
        printf("%d\t\t%d\t\t", i + 1, processSize[i]);
        if (allocation[i] != -1)
            printf("%d\n", allocation[i] + 1); // +1 for human-readable index
        else
            printf("Not Allocated\n");
    }

    return 0;
}
